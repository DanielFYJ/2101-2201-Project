@startuml
actor Kid
participant "//<<Boundary>>//\n**IWebPortal**" as A
participant "//<<control>>//\n**StatusManagement**" as B
participant "//<<control>>//\n**FeedbackManagement**" as C
participant "//<<control>>//\n**WebPortalManagement**" as D
participant "//<<control>>//\n**CommunicationManagement**" as E
participant "//<<control>>//\n**RoboticCarManagement**" as F
actor RoboticCar

Kid-> A:View Status of Robotic Car(speed & movement)
activate A #FFBBBB

A -> B: getSpeed()
activate B #FFBBBB
A -> B: getMovement()

B -> D: getStatus(status)
activate D #FFBBBB

D -> E: receiveStatus()
activate E #FFBBBB

alt Successful connection between Web Portal and Robotic Car
E -> F:isConnectedtoWeb()
activate F #FFBBBB
F--> E: Success()
E -> F: sendStatus()()


F -> RoboticCar: gatherStatus(sensorData)
activate RoboticCar #FFBBBB

RoboticCar --> F:Success()
deactivate RoboticCar

F --> E: Success()

E --> D: Success()

D --> B: Success()

B --> A: setSpeed(int)
B --> A: setMovement(string)
deactivate B

A -> Kid: Displays Status(speed & movement)

else Failed connection between web portal and robotic car


E -> F:isConnectedtoWeb()
F--> E: Failure()
F --> E: sendFeedback()
deactivate F

E --> D: receiveFeedback()
deactivate E

D --> C: getFeedback(feedback)
deactivate D
activate C #FFBBBB

C --> A: setMessage(string)
deactivate C


A --> Kid: Displays Connection Error Message
deactivate A

end
@enduml
