@startuml
actor Kid
participant "//<<Boundary>>//\n**IWebPortal**" as A
participant "//<<control>>//\n**StatusManagement**" as B
participant "//<<control>>//\n**FeedbackManagement**" as C
participant "//<<control>>//\n**WebPortalManagement**" as D
participant "//<<control>>//\n**RoboticCarManagement**" as E
participant "//<<control>>//\n**CommunicationManagement**" as F
participant "//<<entity>>// \n **WIFIModule**" as G
actor RoboticCar

Kid-> A:View Status of Robotic Car(speed & movement)
activate A #FFBBBB

A -> B: getSpeed()
activate B #FFBBBB
A -> B: getMovement()

B -> D: getStatus(status)
activate D #FFBBBB

D -> E: recieveStatus()
activate E #FFBBBB

E -> F: gatherStatus()
activate F #FFBBBB

F -> G: receiveFeedback(sensorData, errorMessage)
activate G #FFBBBB

alt Successful connection between Web Portal and Robotic Car
G -> RoboticCar: establishCommunication()
activate RoboticCar #FFBBBB
RoboticCar --> G: Success()
G -> RoboticCar: getSensorData() 


RoboticCar --> G: setSensorData(string)

G --> F: sendFeedback(sensorData, errorMessage)

F --> E: sendStatus()

E --> D: Success()

D --> B: Success()

B --> A: setSpeed(int)
B --> A: setMovement(string)
deactivate B

A -> Kid: Displays Status(speed & movement)

else Failed connection between web portal and robotic car
G -> RoboticCar: establishCommunication()
RoboticCar --> G: Failure()
RoboticCar --> G: setErrorMessage(string)
deactivate RoboticCar

G --> F: sendFeedback(sensorData, errorMessage)
deactivate G 

F --> E: sendFeedback()
deactivate F

E --> D: recieveFeedback()
deactivate E

D --> C: getFeedback(feedback)
deactivate D
activate C #FFBBBB

C --> A: setMessage(string)
deactivate C


A --> Kid: Displays Connection Error Message
deactivate A

end
@enduml
