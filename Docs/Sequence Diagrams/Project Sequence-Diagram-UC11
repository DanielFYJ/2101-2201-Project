@startuml
actor RoboticCar
participant "//<<control>>//\n**RoboticCarManagement**" as A
participant "//<<control>>//\n**CommunicationManagement**" as B
participant "//<<control>>//\n**WebPortalManagement**" as C
participant "//<<control>>//\n**StatusManagement**" as D
participant "//<<control>>//\n**FeedbackManagement**" as E
participant "//<<entity>>//\n**Dashboard**" as F
database Database

alt Successful transmission of Feedback between Web Portal and Robotic Car



RoboticCar-> A:Sends Robotic Car Feedback information
activate A #FFBBBB

A -> B: isConnectedtoWeb()
activate B #FFBBBB
B --> A: Success()
A -> B: seterrorMessage(string)
A -> B: setSensorData(string)

B -> C: sendFeedback(sensorData, errorMessage)
activate C #FFBBBB

C -> D: sendFeedback()
activate D #FFBBBB

D -> F: recieveFeedback()
activate F #FFBBBB

F -> Database: getFeedback(feedback)
activate Database #FFBBBB

Database--> F: Success()
 
F --> D: Success()

D --> C: Success()

C --> B: Success()

B --> A: Success()

A --> RoboticCar: Success()

else Failed due to connection failure between web portal and robotic car

RoboticCar-> A:Sends Robotic Car Feedback information
A -> B: isConnectedtoWeb()
B --> A: Failure()
A -> B: seterrorMessage(string)


B -> C: sendFeedback(sensorData, errorMessage)


C -> D: sendFeedback()


D -> F: recieveFeedback()


F -> Database: getFeedback(feedback)

Database--> F: Success()

deactivate Database

F --> D: Success()
deactivate F 


D --> C: Success()
deactivate D

C --> B: Success()
deactivate C

B --> A: Success()
deactivate B

A --> RoboticCar: Success()
deactivate A
end
@enduml
