@startuml DetectObstacles2

participant "//<<entity>>// \n **RoboticCar**" as A
participant "//<<control>>//\n**RoboticCarManagement**" as B
participant "//<<control>>//\n**CommunicationManagement**" as C
participant "//<<control>>//\n**WebPortalManagement**" as D
participant "//<<entity>>// \n **WebPortal**" as E


A -> B: gatherFeedback()
activate B #FFBBBB

alt Robotic transmits feedback to web portal via WIFI module

B -> C: establishCommunication()
activate C #FFBBBB

C --> B: success()

C -> B: receiveFeedback() 
deactivate C

B -> D: sendFeedback()
activate D #FFBBBB

D --> B: success()
deactivate D

D -> E: receiveFeedback()
activate E #FFBBBB

E --> B: success()
deactivate E


else Connection error between web portal and robotic car


B -> C: establishCommunication()
activate C #FFBBBB
C --> B: failure()
deactivate C

B -> E: Display error message
deactivate B
end
@enduml