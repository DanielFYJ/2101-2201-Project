@startuml DetectObstacles2

participant "//<<entity>>// \n **RoboticCar**" as A
participant "//<<control>>//\n**RoboticCarManagement**" as B
participant "//<<control>>//\n**CarCommunicationManagement**" as C
participant "//<<control>>//\n**WebCommunicationManagement**" as D
participant "//<<control>>//\n**FeedbackManagement**" as E
participant "//<<entity>>// \n **Dashboard**" as F
database Database

A -> B: gatherFeedback()
activate B #FFBBBB

alt Robotic transmits feedback to web portal via WIFI module

B -> C: sendFeedback()
activate C #FFBBBB

C -> D: receiveFeedback()
activate D #FFBBBB

D -> E: getFeedback()
activate E #FFBBBB

E -> F: getFeedback()
activate F #FFBBBB

F -> Database: Stores Feedback
activate Database #FFBBBB
Database --> F: success()
deactivate

F --> E: success()
deactivate F
E --> D: success()
deactivate E
D --> C: success()
deactivate D
C --> B: success()
deactivate C


else Connection error between web portal and robotic car


B -> C: sendFeedback()
activate C #FFBBBB
C --> B: failure()
deactivate C


B -> F: Display error message
deactivate B
end
@enduml