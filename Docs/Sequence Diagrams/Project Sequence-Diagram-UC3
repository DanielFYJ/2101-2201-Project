@startuml
actor Kid
participant "//<<Boundary>>// \n **QueueUI**" as A
participant "//<<Control>>//\n**QueueManagement**" as B
participant "//<<Control>>//\n**WebPortalManagement**" as C
participant "//<<Control>>// \n **RoboticCarManagement**" as D
participant "//<<Entity>>// \n **Robotic Car**" as E


Kid -> A:submit Queue
activate A #FFBBBB

A -> B: SubmitQueue()
activate B #FFBBBB

alt Successful Connection to Robotic Car 
B -> C: sendQueue()
activate C #FFBBBB

C -> D: receiveQueue()
activate D #FFBBBB

D -> E: storeQueue()
activate E #FFBBBB

E --> D: success()
deactivate E

D --> C: success()
deactivate D
C --> B: Success()
deactivate C

B --> A: Success()
deactivate B 
    
A -> Kid: Success()
deactivate A

else Failed Connection to Robotic Car 
Kid -> A:submit Queue
activate A #FFBBBB

A -> B: SubmitQueue()
activate B #FFBBBB

B -> C: sendQueue()
activate C #FFBBBB

C --> B: failure()
deactivate C

B --> A: failure()
deactivate B

A -> Kid: failure()
deactivate A 
end




@enduml